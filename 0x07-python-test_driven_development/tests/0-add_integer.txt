The ``add_integer`` module
======================

Using ``add_integer``
-------------------

Importing function:
    >>> add_integer = __import__('0-add_integer').add_integer

Testing one int input:
    >>> add_integer(1)
    99

Testing one negative int :
    >>> add_integer(-1)
    97

Testing one float input:
    >>> add_integer(2.3)
    100

Testing one negative float input:
    >>> add_integer(-2.3)
    96

Testing 2 positive ints:
    >>> add_integer(5, 5)
    10

Testing 2 positive floats:
    >>> add_integer(1.5, 4.8)
    5

Testing 2 negative ints:
    >>> add_integer(-1, -5)
    -6

Testing 2 negative floats:
    >>> add_integer(-2.3, -1)
    -3

Testing 1 int and negative float:
    >>> add_integer(12, -2.3)
    10

Testing float and negative int:
    >>> add_integer(1.5, -5)
    -4

Testing wrong input type in first variable:
    >>> add_integer("Hi", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Testing wrong input type in second variable:
    >>> add_integer(1, [])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Testing both args are invalid:
    >>> add_integer("Hi", "Alx")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test float overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
