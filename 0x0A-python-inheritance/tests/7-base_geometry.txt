Test BaseGeometry Module

Import Module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test area error:
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Test arg for BaseGeometry:
	>>> bg = BaseGeometry(5)
	Traceback (most recent call last):
	...
	TypeError: BaseGeometry() takes no arguments

Test area() with arg:
	>>> bg = BaseGeometry()
	>>> bg.area(5)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given


Test integer validator TypeError:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", "hi")
	Traceback (most recent call last):
        ...
        TypeError: name must be an integer

Test integer validator ValueError:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("name", -3)
        Traceback (most recent call last):
        ...
        ValueError: name must be greater than 0

Test integer validator normal value:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("name", 1)

Test no args:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test 1 arg:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Test 1 arg:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator(1)
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

Test float:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", -3.0)
	Traceback (most recent call last):
        ...
        TypeError: name must be an integer
